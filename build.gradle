buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT"
    }
}

apply plugin: 'forge'
apply plugin: 'java'
apply plugin: 'idea'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def getGitRef() {
  try {
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'rev-parse', '--short', 'HEAD'
      standardOutput = stdout
    }
    return stdout.toString().trim()
  } catch (Throwable e) {
    return "unknown"
  }
}

def getVersionFromGitTag() {
  try {
    def stdout = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'describe'
      standardOutput = stdout
      errorOutput = null
    }
    return stdout.toString().trim()
  } catch (Throwable e) {
    return "unknown"
  }
}

def getVersion() {
  def vGit = getVersionFromGitTag()
  def vConf = "${config.mod.version}"
  if (vGit == ("v" + vConf)) {
    return vConf
  }
  return vConf + "+" + getGitRef()
}

version = getVersion()
group = config.mod.group
archivesBaseName = config.mod.archivesBaseName

ext.simpleVersion = version
version = "mc${config.minecraft.version}-${project.version}"

minecraft {
    version = config.minecraft.version + "-" + config.forge.version
    runDir = "run"
    
    replace "@MODNAME@", config.mod.name
    replace "@MODID@", config.mod.id
    replace "@MODVERSION@", project.simpleVersion
    replace "/*@MCVERSIONDEP@*/", ", acceptedMinecraftVersions = \"${config.mod.acceptedMinecraftVersions}\""
}

repositories {
    mavenCentral()
    maven { url = "http://maven.cil.li/" }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
}

configurations {
    provided
}

sourceSets {
    main {
        output.resourcesDir = 'build/classes/main'
        compileClasspath += configurations.provided
    }
}

dependencies {
    compile "li.cil.oc:OpenComputers:${config.oc.version}:dev"
    provided "net.industrial-craft:industrialcraft-2:${config.ic2.version}:dev"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.simpleVersion
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        /* replace version and mcversion */
        expand "version": project.simpleVersion, "mcversion": project.minecraft.version,
        /* replace modid and modname*/
        "modid": config.mod.id, "name": config.mod.name,
        /* replace description */
        "description": config.mod.description,
        /* replace url */
        "url": config.mod.url
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    // Move access transformer to META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
   manifest {
       attributes 'FMLAT': "${config.mod.id}_at.cfg"
   }
}

// this is needed for IntelliJ so we don't have to copy over the assets manually every time
idea {
    module {
        outputDir = file('build/classes/main')
    }
}

